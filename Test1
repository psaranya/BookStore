Mapping data: 
closeVaultId must be an unique id in 7 digits of the closure for a day and for a branch. Example : 0000001 at the first closure, 0000002 at the second one and the day after the id could be 0000001 again. 
closeVaultCutList:
closeVaultTypeOfCut must be CashUnitMoneyTypeName of Cash Unit 
cashUnitIntegerValueAmount must be the  CashUnitIntegerValueAmount of Cash Unit  
cashRequestContentQuantity must be the cashUnitStockQuantity registered in Cash Unit Stock 
cashUnitDecimalValueAmount must be the CashUnitIntegerValueAmount of Cash Unit 

@Mapper(componentModel = "spring")
public interface CloseVaultRequestMapper {
    @Mapping(target = "mainFrameRequest.contextInfo", source = "sfIdentityProvider")
    @Mapping(target = "mainFrameRequest.requestInfo.cashRequestAmount", source = "closeVaultRequest.cashRequestAmount")
    @Mapping(target = "mainFrameRequest.requestInfo.closeVaultTime", source = "closeVaultRequest.closeVaultTime")
    @Mapping(target = "mainFrameRequest.requestInfo.closeVaultDate", source = "closeVaultRequest.closeVaultDate")
    @Mapping(target = "mainFrameRequest.requestInfo.closeVaultId", source = "closeVaultRequest.closeVaultId")
    @Mapping(target = "mainFrameRequest.requestInfo.closeVaultBuc", source = "closeVaultRequest.closeVaultBuc")
    @Mapping(target = "mainFrameRequest.requestInfo.cashRequestAmountCurrencyCode", source = "closeVaultRequest.cashRequestAmountCurrencyCode")
    @Mapping(target = "mainFrameRequest.requestInfo.closeVaultCutList", source = "closeVaultRequest.closeVaultCutList")
    MFCloseVaultMainRequest mapCloseVaultRequest (CloseVaultRequest closeVaultRequest, SFIdentityProvider sfIdentityProvider);

    List<MFCloseVaultRequestInfoCutListContentInfo> mapToContentInfo(List<CloseVaultCutListContentInfo> contentInfoList);

    default MFCloseVaultRequestInfoCutList mapToContextList(CloseVaultCutList entityList) {
        MFCloseVaultRequestInfoCutList contextList = new MFCloseVaultRequestInfoCutList();
        contextList.setCloseVaultContentInfo(mapToContentInfo(entityList.getCloseVaultContentInfo()));
        return contextList;
    }
