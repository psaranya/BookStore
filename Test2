@Mapper(componentModel = "spring")
public interface CashStockMapper {

    @Mapping(target = "cashStockId", source = "cashStock.id") // Extract ID from CashStock object
    @Mapping(target = "cashStockTypeName", source = "cashStock.type")
    @Mapping(target = "cashStockStatusName", source = "cashStock.status")
    @Mapping(target = "cashStockLastSessionId", source = "cashStock.lastSessionId")
    @Mapping(target = "cashStockTransportDaysCoinsName", expression = "java(getTransportDay(cashStock, \"COINS\", cashStockDeliveryRepository))")
    @Mapping(target = "cashStockTransportDaysNotesName", expression = "java(getTransportDay(cashStock, \"NOTES\", cashStockDeliveryRepository))")
    @Mapping(target = "cashStockAmount", source = "cashStock.amount")
    @Mapping(target = "cashStockCurrencyCode", source = "cashStock.currencyCode")
    @Mapping(target = "unitRobiId", source = "cashStock.unitRobiId")
    CashStockDTO toDto(CashStockDelivery cashStockDelivery);

    default String getTransportDay(CashStock cashStock, String deliveryType, CashStockDeliveryRepository cashStockDeliveryRepository) {
        List<CashStockDelivery> deliveries = cashStockDeliveryRepository.findByCashStock(cashStock);
        for (CashStockDelivery delivery : deliveries) {
            if (delivery.getDeliveryType().equalsIgnoreCase(deliveryType)) {
                if (Boolean.TRUE.equals(delivery.getIsMonday())) return "MONDAY";
                if (Boolean.TRUE.equals(delivery.getIsTuesday())) return "TUESDAY";
                if (Boolean.TRUE.equals(delivery.getIsWednesday())) return "WEDNESDAY";
                if (Boolean.TRUE.equals(delivery.getIsThursday())) return "THURSDAY";
                if (Boolean.TRUE.equals(delivery.getIsFriday())) return "FRIDAY";
                if (Boolean.TRUE.equals(delivery.getIsSaturday())) return "SATURDAY";
                if (Boolean.TRUE.equals(delivery.getIsSunday())) return "SUNDAY";
            }
        }
        return null;
    }
}
